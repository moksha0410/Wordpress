import{element}from"svelte/internal";import{writable,readable,derived,get}from"svelte/store";import elementsConfig from"./config.json";import{getElements_OnAddRepeaterClick,getElements_OnRemoveRepeaterClick}from"./construct";class Store{fields;props;constructor(e){this.props=e;let t=jQuery.extend(!0,{},elementsConfig);this.onLoad(e,t)}onLoad(e,t){this.faq_group_location_index=e.settings.faq_group_location_index?e.settings.faq_group_location_index:2,this.group_id=e.tagID,this.post_types=e.post_types;let o=this.getInitialElements(t),s=this.getInitFields(o),i=e.settings.fields?e.settings.fields:s;i=this.fixDataTypes(i);let a=o,r=this.get_repeatedGroups(i);a=this.updateFAQGroupElements(a,r),a=this.updateElementPropertyWithFieldsValue(a,i);let n=jQuery.extend(!0,{},a);return this.fields=writable(JSON.parse(JSON.stringify(i))),this.elements=writable(n),a}fixDataTypes(e){for(var t in e){let s=t.split("__")[1],i=t.startsWith("post")&&!t.startsWith("post_type")&&!isNaN(s),a=t.startsWith("terms")&&!isNaN(s);if((i||a)&&Array.isArray(e[t].value)){var o=e[t].value.map(Number);e[t].value=o}}return e}getElementsConfig(){return jQuery.extend(!0,{},elementsConfig)}getInitFields(e){let t={};for(var o in e)e[o].extra&&"field"==e[o].extra.elementType&&(t[o]={value:e[o].default,originId:e[o].extra.originId?e[o].extra.originId:o});return t=this.updateFAQGroupFields(t,1),t}get_repeatedGroups(e){let t,o=[];for(var s in e){let i=s.split("__")[1],a="post",r="category",n=s.startsWith("post_type")&&!isNaN(i);s.startsWith("taxonomy")&&isNaN(i);if(n&&(a=e[s].value,r=e["taxonomy__"+i].value,t=i),n){let e={post_type:a,taxonomy:r,idNumber:t||1};o.push(e)}}return o}updateFAQGroupElements(e,t){let o=this;for(let o=0;o<t.length;o++){const s=t[o].idNumber;e=this.createRepeatedGroupOfElements(e,s)}let s={repeatedGroups:t};return this.getPostsAndTaxonomiesOfPostTypeMultiple(s).then((e=>{for(var t in e){let s="post__"+t,i="taxonomy__"+t,a="terms__"+t,r=this.getPostTypeDataFromFetchData(e[t]),n=r.posts,p=r.taxonomies,l=r.terms;o.updateElementOptions(s,n),o.updateElementOptions(i,p),o.updateElementOptions(a,l)}})),e}arrayRemove(e,t){return e.filter((function(e){return e!=t}))}getInitialElements(e){let t=e,o=["faq_group_row","post_type","taxonomy_or_post","post","taxonomy","terms"];for(var s in o){delete t[o[s]]}return t.faq_group_location.children.splice(0,1),t.faq_group_location.items.splice(0,1),t}convertPostTypeIntoOptions(e){for(var t in this.props.post_types){let o=t.replace(/_/g," ");o=o.charAt(0).toUpperCase()+o.slice(1),1==this.props.post_types[t].active&&e.push({id:t,label:this.props.post_types[t].label})}return e}createRepeatedGroupOfElements(e,t){let o=this.getElementsConfig(),s={},i="faq_group_row__"+t,a="post_type__"+t,r="taxonomy_or_post__"+t,n="post__"+t,p="taxonomy__"+t,l="terms__"+t;for(var _ in s[i]=o.faq_group_row,s[a]=o.post_type,s[r]=o.taxonomy_or_post,s[n]=o.post,s[p]=o.taxonomy,s[l]=o.terms,s[a].options=this.convertPostTypeIntoOptions(s[a].options),s)s[_]=this.updatePropertiesOfRepeatedElement(s[_],t),s[_]=this.updateChildren(s[_],t);let d={title:"FAQ Group",children:[i]};return e.faq_group_location.children.push([i]),e.faq_group_location.items.push(d),jQuery.extend(!0,e,s),e}updateChildren(e,t){if(!e.children)return e;let o=e.children,s=[],i=0;return o.forEach((e=>{s[i]=e+"__"+t,i++})),e.children=s,e}getIndexedElement(e,t,o){e[t[o].originId]}async getPostsAndTaxonomiesOfPostTypeMultiple(e){const t={method:"POST",headers:new Headers({"Content-Type":"application/json","X-WP-Nonce":helpie_faq_object.rest_nonce}),body:JSON.stringify(e)};let o=helpie_faq_object.api_endpoints.get_post_type_data_multiple,s=await fetch(o,t);return await s.json()}async getPostsAndTaxonomiesOfPostType(e){const t={method:"POST",headers:new Headers({"Content-Type":"application/json","X-WP-Nonce":helpie_faq_object.rest_nonce}),body:JSON.stringify(e)};let o=helpie_faq_object.api_endpoints.get_post_type_data,s=await fetch(o,t),i=await s.json();return this.getPostTypeDataFromFetchData(i)}async getTermsOfTaxonomy(e){const t={method:"POST",headers:new Headers({"Content-Type":"application/json","X-WP-Nonce":helpie_faq_object.rest_nonce}),body:JSON.stringify(e)};let o=helpie_faq_object.api_endpoints.get_taxonomy_data,s=await fetch(o,t),i=await s.json();return this.getTermsDataFromFetchData(i)}capitalizeFirstLetter(e){return e.charAt(0).toUpperCase()+e.slice(1)}getTermsDataFromFetchData(e){let t=[];for(let o=0;o<e.length;o++)t[o]={},t[o].id=e[o].term_id,t[o].label=this.capitalizeFirstLetter(e[o].name);return t}getPostTypeDataFromFetchData(e){let t=[],o=[],s=[],i={};for(let o=0;o<e.posts.length;o++)t[o]={},t[o].id=e.posts[o].ID,t[o].label=e.posts[o].post_title;let a=0;Object.keys(e.taxonomies).forEach((t=>{o[a]={},o[a].id=t,o[a].label=e.taxonomies[t].labels.name,a++}));let r=0;return Object.keys(e.terms).forEach((t=>{s[r]={},s[r].id=e.terms[t].term_id,s[r].label=e.terms[t].name,r++})),i.posts=t,i.taxonomies=o,i.terms=s,i}onTaxonomyChange(e){let t=this,o="post",s="taxonomy",i="terms";e.extra.faq_group_location_index&&(o=o+"__"+e.extra.faq_group_location_index,s=s+"__"+e.extra.faq_group_location_index,i=i+"__"+e.extra.faq_group_location_index);let a={taxonomy:get(this.fields)[s].value};t.getTermsOfTaxonomy(a).then((e=>{t.updateElementOptions(i,e)}))}onPostTypeChange(e){let t=this,o="post_type",s="post",i="taxonomy";e.extra.faq_group_location_index&&(s=s+"__"+e.extra.faq_group_location_index,i=i+"__"+e.extra.faq_group_location_index,o=o+"__"+e.extra.faq_group_location_index);let a=get(this.fields),r={post_type:a[o].value,taxonomy:a[i].value,posts_element_id:s,taxonomies_element_id:i};t.getPostsAndTaxonomiesOfPostType(r).then((e=>{t.updateElementOptions(s,e.posts),t.updateElementOptions(i,e.taxonomies)}))}updateFAQGroupFields(e,t){return e["post_type__"+t]={originId:"post_type",value:""},e["taxonomy_or_post__"+t]={originId:"taxonomy_or_post",value:""},e["post__"+t]={originId:"post",value:[]},e["taxonomy__"+t]={originId:"taxonomy",value:[]},e["terms__"+t]={originId:"terms",value:[]},e}repeatLocation(e){let t={},o=this.faq_group_location_index,s=get(this.elements);t=this.createRepeatedGroupOfElements(s,o);let i=get(this.fields);i=this.updateFAQGroupFields(i,this.faq_group_location_index);let a=jQuery.extend(!0,{},i);this.fields.update((e=>a)),t=this.updateElementPropertyWithFieldsValue(t,i),this.faq_group_location_index++,this.elements.update((e=>t))}updatePropertiesOfRepeatedElement(e,t){return e.dependency&&e.dependency.forEach(((o,s)=>{let i=o.id+"__"+t;e.dependency[s].id=i})),e.extra=e.extra?e.extra:{},e.extra.faq_group_location_index=t,e}addField(e,t){this.fields.update((o=>(o[e]=t,o)))}updateElementPropertyWithFieldsValue(e,t){for(var o in t)e.hasOwnProperty(o)&&(e[o].properties=e[o].properties?e[o].properties:{},e[o].extra&&1==e[o].extra.multiple?e[o].properties.value=t[o].value?t[o].value:[]:e[o].properties.value=t[o].value?t[o].value:"");return e}onDeleteRepeaterClick(e,t){let o=get(this.elements),s=e,i=(o.faq_group_location.children[t]+"").split("__")[1];this.elements.update((e=>{for(var o in e=getElements_OnRemoveRepeaterClick(s,t,e))if(e.hasOwnProperty(o)&&e[o].children){let t=0;for(var i in e[o].items=[],e[o].children)e[o].items[t]={title:"FAQ Group",children:[e[o].children[t]]},t++}return e}));let a=get(this.fields);delete a["post_type__"+i],delete a["taxonomy_or_post__"+i],delete a["post__"+i],delete a["taxonomy__"+i],delete a["terms__"+i],this.fields.update((e=>a))}updateElementOptions(e,t){get(this.elements);let o=get(this.elements);o[e].options=t,this.elements.update((e=>o))}updateFields(e){this.fields.update((t=>{let o=e.id,s=e.properties.value;return t[o]=t[o]?t[o]:{},t[o].value=s,t}));let t=get(this.fields),o=get(this.elements),s=this.updateElementPropertyWithFieldsValue(o,t);this.elements.update((e=>s))}}export default Store;